name: Terraform plan / apply

on:
  workflow_call:
    inputs:
      terraform:
        description: 'terraform command'
        required: true
        type: string # reusable workflow does not support type: choice
        # type: choice
        # options:
        #   - plan
        #   - apply
    secrets:
      TF_API_TOKEN:
        description: 'Terraform Cloud API Token'
        required: true
      APP_ID:
        description: 'GitHub App ID'
        required: true
      APP_PRIVATE_KEY:
        description: 'GitHub App Private Key'
        required: true

jobs:
  labels:
    runs-on: ubuntu-latest
    environment: ${{ inputs.terraform }}
    outputs:
      label: ${{ steps.labels-on-merge.outputs.labels || steps.pr-labels.outputs.labels || '[]' }}
    steps:
      - uses: actions/checkout@v4
      - name: Find pull request labels on merge
        uses: ./.github/actions/labels-on-merge
        if: github.event_name == 'push'
        id: labels-on-merge
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Pull request labels
        if: github.event_name == 'pull_request'
        id: pr-labels
        run:
          echo "labels=${{ toJson(github.event.pull_request.labels.*.name) }}" >>$GITHUB_OUTPUT

  terraform:
    needs: labels
    if: inputs.terraform == 'plan' || inputs.terraform == 'apply' && contains(fromJson(needs.labels.outputs.label), 'manual') == false
    runs-on: ubuntu-latest
    environment: ${{ inputs.terraform }}
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
      - name: Generate a token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: hayas1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - uses: ./.github/actions/terraform-test
        with:
          directory: terraform
      - uses: ./.github/actions/tfcmt-cmd
        with:
          labels: ${{ needs.labels.outputs.label }}
          directory: terraform
          terraform: ${{ inputs.terraform }}
          github-token: ${{ steps.app-token.outputs.token }}
